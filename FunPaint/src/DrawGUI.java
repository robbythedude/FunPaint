/**
 * @author Robert Steiner
 * Edited: August 3rd
 *DO NOT FORGET TO EDIT YOUR MARGINES WHEN PRINTING! GO TO ZERO ALL THE WAY AROUND!
 */

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.print.*;
import java.io.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.applet.*;

public class DrawGUI extends javax.swing.JFrame {

    /**
     * Creates new form DrawGUI    
     */
    public DrawGUI() {
        initComponents();
        this.setTitle("FunPaint");  //Sets title of main window
        this.setSize(800,600);   //Sets size of screen to be pretty large
        jAboutFrame.setTitle("About");   //Sets title of about window
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jAboutFrame = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTransFrame = new javax.swing.JFrame();
        jTransSlide = new javax.swing.JSlider();
        jLabel8 = new javax.swing.JLabel();
        jBoldFrame = new javax.swing.JFrame();
        jBoldSlide = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jGradFrame = new javax.swing.JFrame();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jGradColor1 = new javax.swing.JPanel();
        jGradColor2 = new javax.swing.JPanel();
        jDrawGradButt = new javax.swing.JButton();
        jOvalRadio = new javax.swing.JRadioButton();
        jRectRadio = new javax.swing.JRadioButton();
        jRoundRadio = new javax.swing.JRadioButton();
        jFSRadio = new javax.swing.JRadioButton();
        jCenterPanel = new javax.swing.JPanel();
        jBotPanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jOpenButt = new javax.swing.JButton();
        jPrintButt = new javax.swing.JButton();
        jSaveButt = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jTextButt = new javax.swing.JButton();
        jFreeButt = new javax.swing.JButton();
        rectButton1 = new RectButton();
        ovalButton1 = new OvalButton();
        roundRectButton1 = new RoundRectButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jUndoButt = new javax.swing.JButton();
        jClearButt = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jDotCheck = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jFillCheck = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jColorPanel = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jTransButt = new javax.swing.JButton();
        jBoldButt = new javax.swing.JButton();
        jGradButt = new javax.swing.JButton();
        jTexture = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jLoad = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jSave = new javax.swing.JMenuItem();
        jSaveImg = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jPrint = new javax.swing.JMenuItem();
        jClose = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jUndo = new javax.swing.JMenuItem();
        jAbout = new javax.swing.JMenu();

        jAboutFrame.setResizable(false);

        jLabel4.setText("Author:    Robert E. Steiner III");

        jLabel5.setText("Updated: 8/08/12");

        jLabel7.setText("Final / SWENG311");

        javax.swing.GroupLayout jAboutFrameLayout = new javax.swing.GroupLayout(jAboutFrame.getContentPane());
        jAboutFrame.getContentPane().setLayout(jAboutFrameLayout);
        jAboutFrameLayout.setHorizontalGroup(
            jAboutFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4)
            .addComponent(jLabel5)
            .addComponent(jLabel7)
        );
        jAboutFrameLayout.setVerticalGroup(
            jAboutFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAboutFrameLayout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(0, 246, Short.MAX_VALUE))
        );

        jTransFrame.setTitle("Transparency");
        jTransFrame.setResizable(false);

        jTransSlide.setValue(100);
        jTransSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTransSlideStateChanged(evt);
            }
        });

        jLabel8.setText("Transparency: ");

        javax.swing.GroupLayout jTransFrameLayout = new javax.swing.GroupLayout(jTransFrame.getContentPane());
        jTransFrame.getContentPane().setLayout(jTransFrameLayout);
        jTransFrameLayout.setHorizontalGroup(
            jTransFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jTransFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTransSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jTransFrameLayout.setVerticalGroup(
            jTransFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jTransFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jTransSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jBoldFrame.setTitle("Bold");
        jBoldFrame.setResizable(false);

        jBoldSlide.setMaximum(20);
        jBoldSlide.setValue(0);
        jBoldSlide.setMaximumSize(new java.awt.Dimension(75, 23));
        jBoldSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jBoldSlideStateChanged(evt);
            }
        });

        jLabel2.setText("Bold: ");

        javax.swing.GroupLayout jBoldFrameLayout = new javax.swing.GroupLayout(jBoldFrame.getContentPane());
        jBoldFrame.getContentPane().setLayout(jBoldFrameLayout);
        jBoldFrameLayout.setHorizontalGroup(
            jBoldFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBoldFrameLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jBoldSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jBoldFrameLayout.setVerticalGroup(
            jBoldFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoldFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBoldFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jBoldSlide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jGradFrame.setTitle("Gradient");
        jGradFrame.setResizable(false);

        jLabel9.setText("Color One: ");

        jLabel10.setText("Color Two: ");

        jGradColor1.setBackground(new java.awt.Color(0, 255, 255));
        jGradColor1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jGradColor1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jGradColor1Layout = new javax.swing.GroupLayout(jGradColor1);
        jGradColor1.setLayout(jGradColor1Layout);
        jGradColor1Layout.setHorizontalGroup(
            jGradColor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jGradColor1Layout.setVerticalGroup(
            jGradColor1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jGradColor2.setBackground(new java.awt.Color(255, 0, 0));
        jGradColor2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jGradColor2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jGradColor2Layout = new javax.swing.GroupLayout(jGradColor2);
        jGradColor2.setLayout(jGradColor2Layout);
        jGradColor2Layout.setHorizontalGroup(
            jGradColor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jGradColor2Layout.setVerticalGroup(
            jGradColor2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jDrawGradButt.setText("Draw");
        jDrawGradButt.setToolTipText("");
        jDrawGradButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDrawGradButtActionPerformed(evt);
            }
        });

        jOvalRadio.setText("Oval");

        jRectRadio.setText("Rectangle");

        jRoundRadio.setText("Rounded Rectangle");

        jFSRadio.setText("Full Screen");

        javax.swing.GroupLayout jGradFrameLayout = new javax.swing.GroupLayout(jGradFrame.getContentPane());
        jGradFrame.getContentPane().setLayout(jGradFrameLayout);
        jGradFrameLayout.setHorizontalGroup(
            jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGradFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jOvalRadio)
                    .addGroup(jGradFrameLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jGradColor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jGradFrameLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDrawGradButt)
                            .addComponent(jGradColor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jRoundRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jFSRadio)
                    .addComponent(jRectRadio))
                .addContainerGap())
        );
        jGradFrameLayout.setVerticalGroup(
            jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGradFrameLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jGradColor1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jGradColor2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOvalRadio)
                    .addComponent(jRectRadio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jGradFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRoundRadio)
                    .addComponent(jFSRadio))
                .addGap(5, 5, 5)
                .addComponent(jDrawGradButt)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCenterPanel.setBackground(new java.awt.Color(255, 255, 255));
        jCenterPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCenterPanelMouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jCenterPanelMousePressed(evt);
            }
        });
        jCenterPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jCenterPanelComponentResized(evt);
            }
        });
        jCenterPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jCenterPanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout jCenterPanelLayout = new javax.swing.GroupLayout(jCenterPanel);
        jCenterPanel.setLayout(jCenterPanelLayout);
        jCenterPanelLayout.setHorizontalGroup(
            jCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );
        jCenterPanelLayout.setVerticalGroup(
            jCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 327, Short.MAX_VALUE)
        );

        getContentPane().add(jCenterPanel, java.awt.BorderLayout.CENTER);

        jBotPanel.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(jBotPanel, java.awt.BorderLayout.PAGE_END);

        jToolBar1.setRollover(true);

        jOpenButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Open.png"))); // NOI18N
        jOpenButt.setFocusable(false);
        jOpenButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jOpenButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jOpenButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jOpenButt);

        jPrintButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.png"))); // NOI18N
        jPrintButt.setFocusable(false);
        jPrintButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPrintButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPrintButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrintButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jPrintButt);

        jSaveButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        jSaveButt.setFocusable(false);
        jSaveButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jSaveButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jSaveButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jSaveButt);
        jToolBar1.add(jSeparator4);

        jTextButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/text.png"))); // NOI18N
        jTextButt.setFocusable(false);
        jTextButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jTextButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jTextButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jTextButt);

        jFreeButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pencil.png"))); // NOI18N
        jFreeButt.setFocusable(false);
        jFreeButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jFreeButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jFreeButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFreeButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jFreeButt);

        rectButton1.setText("       ");
        rectButton1.setFocusable(false);
        rectButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rectButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rectButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(rectButton1);

        ovalButton1.setText("        ");
        ovalButton1.setFocusable(false);
        ovalButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ovalButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ovalButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ovalButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(ovalButton1);

        roundRectButton1.setText("            ");
        roundRectButton1.setFocusable(false);
        roundRectButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        roundRectButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        roundRectButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundRectButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(roundRectButton1);
        jToolBar1.add(jSeparator5);

        jUndoButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/undo.png"))); // NOI18N
        jUndoButt.setFocusable(false);
        jUndoButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jUndoButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jUndoButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUndoButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jUndoButt);

        jClearButt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clear.png"))); // NOI18N
        jClearButt.setFocusable(false);
        jClearButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jClearButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jClearButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jClearButt);
        jToolBar1.add(jSeparator1);

        jLabel1.setText(" Dott ");
        jToolBar1.add(jLabel1);

        jDotCheck.setFocusable(false);
        jDotCheck.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jDotCheck.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jDotCheck);

        jLabel3.setText("  Fill ");
        jToolBar1.add(jLabel3);

        jFillCheck.setFocusable(false);
        jFillCheck.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jFillCheck.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jFillCheck);

        jLabel6.setText("  Color ");
        jToolBar1.add(jLabel6);

        jColorPanel.setBackground(new java.awt.Color(0, 0, 0));
        jColorPanel.setMaximumSize(new java.awt.Dimension(10, 20));
        jColorPanel.setMinimumSize(new java.awt.Dimension(10, 20));
        jColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jColorPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jColorPanelLayout = new javax.swing.GroupLayout(jColorPanel);
        jColorPanel.setLayout(jColorPanelLayout);
        jColorPanelLayout.setHorizontalGroup(
            jColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jColorPanelLayout.setVerticalGroup(
            jColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jToolBar1.add(jColorPanel);
        jToolBar1.add(jSeparator6);

        jTransButt.setText("Transparent");
        jTransButt.setFocusable(false);
        jTransButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jTransButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jTransButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jTransButt);

        jBoldButt.setText("Bold");
        jBoldButt.setFocusable(false);
        jBoldButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBoldButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBoldButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBoldButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jBoldButt);

        jGradButt.setText("Gradient");
        jGradButt.setFocusable(false);
        jGradButt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jGradButt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jGradButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGradButtActionPerformed(evt);
            }
        });
        jToolBar1.add(jGradButt);

        jTexture.setText("Texture");
        jTexture.setFocusable(false);
        jTexture.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jTexture.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jTexture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextureActionPerformed(evt);
            }
        });
        jToolBar1.add(jTexture);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("File");

        jLoad.setText("Open");
        jLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoadActionPerformed(evt);
            }
        });
        jMenu1.add(jLoad);
        jMenu1.add(jSeparator2);

        jSave.setText("Save as Obj");
        jSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jSave);

        jSaveImg.setText("Save as Img");
        jSaveImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveImgActionPerformed(evt);
            }
        });
        jMenu1.add(jSaveImg);
        jMenu1.add(jSeparator3);

        jPrint.setText("Print");
        jPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrintActionPerformed(evt);
            }
        });
        jMenu1.add(jPrint);

        jClose.setText("Close");
        jClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseActionPerformed(evt);
            }
        });
        jMenu1.add(jClose);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jUndo.setText("Undo");
        jUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUndoActionPerformed(evt);
            }
        });
        jMenu2.add(jUndo);

        jMenuBar1.add(jMenu2);

        jAbout.setText("About");
        jAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAboutMouseClicked(evt);
            }
        });
        jMenuBar1.add(jAbout);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    Vector<Shape> storage = new Vector<Shape>();  //Storage vector of shapes
    Shape s = new Line();  //Setting line as default
    Image bg, fg, pre = null; //Used for doulbe buffering
    
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        Graphics f = jCenterPanel.getGraphics();
        if(pre!=null) f.drawImage(pre, 0, 0, null);
            
       
        //Painting the shapes stored in the vector
        showVect(f);
        
        
        
    }
    
    
    private void jClearButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearButtActionPerformed
        storage.clear();  //Clears the screen
        bg = null; //Clears double buffer
        fg = null; //Clears double buffer
        pre = null;  //Gets rid of the image that might have been loaded before
        repaint();
    }//GEN-LAST:event_jClearButtActionPerformed

    private void ovalButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ovalButton1ActionPerformed
        s = new Oval();
    }//GEN-LAST:event_ovalButton1ActionPerformed

    private void rectButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectButton1ActionPerformed
        s = new Rectangle();
    }//GEN-LAST:event_rectButton1ActionPerformed

    private void jCenterPanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jCenterPanelComponentResized
        repaint();
    }//GEN-LAST:event_jCenterPanelComponentResized

    
    
    private void jCenterPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCenterPanelMousePressed
        s.oldx = evt.getX();//Storing cursor X-Value
        s.oldy = evt.getY();//Storing cursor Y-Value
        s.howBold = jBoldSlide.getValue();  //Gets how bold the user would like the shape
        s.alpha = jTransSlide.getValue();   //Gets how transparent the user wnats the shape
        s.dot = jDotCheck.isSelected(); //Sets shape to be dots, or not
        s.fill = jFillCheck.isSelected();  //Sets shape to filled, or not
        
        if(bg == null)
        {
            bg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
            Graphics bgg = bg.getGraphics();
            bgg.setColor(Color.white);
            bgg.fillRect(0, 0, jCenterPanel.getWidth(),jCenterPanel.getHeight());
            fg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
        }
       
    }//GEN-LAST:event_jCenterPanelMousePressed

    private void jCenterPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCenterPanelMouseReleased
        s.newx = evt.getX();//Storing cursor X-Value
        s.newy = evt.getY();//Storing cursor Y-Value
        s.shapeColor = jColorPanel.getBackground();  //Storing color of shape        
        storage.add(s);  //Creating new shape to be stored into vector
        s = new Line();  //Resetting back to default
        
        Graphics bgg = bg.getGraphics();  
        bgg.drawImage(fg,0,0,null);  //Updating the background image 
        repaint();
    }//GEN-LAST:event_jCenterPanelMouseReleased

    private void roundRectButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundRectButton1ActionPerformed
        s = new RoundRect();  
    }//GEN-LAST:event_roundRectButton1ActionPerformed

    private void jUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUndoActionPerformed
        
        undoMeth(); //Calls the method to undo last change
        
    }//GEN-LAST:event_jUndoActionPerformed

    private void jCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseActionPerformed
        System.exit(0);   //Closes the program safely
    }//GEN-LAST:event_jCloseActionPerformed

    private void jAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAboutMouseClicked
        jAboutFrame.show();   //Makes the about frame appear when the About menu item is clicked
        jAboutFrame.setSize(175, 100);  //Sets the size to be perfect display
    }//GEN-LAST:event_jAboutMouseClicked

    private void jCenterPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCenterPanelMouseDragged
        Graphics fgg = fg.getGraphics();
        fgg.drawImage(bg,0,0,null);
        s.newx = evt.getX();//Storing cursor X-Value
        s.newy = evt.getY();//Storing cursor Y-Value
        s.shapeColor = jColorPanel.getBackground();  //Storing color of shape
        s.drawShape(fgg);  
        Graphics g = jCenterPanel.getGraphics();
        g.drawImage(fg,0,0,null);
    
    }//GEN-LAST:event_jCenterPanelMouseDragged

    private void jSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveActionPerformed
           saveObj();  //Calls method to save object
    }//GEN-LAST:event_jSaveActionPerformed

    private void jLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoadActionPerformed
        
        loadMeth(); //Calls the load method
        
    }//GEN-LAST:event_jLoadActionPerformed

    private void jPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrintActionPerformed
        printStuff(); //Calls the print method
    }//GEN-LAST:event_jPrintActionPerformed

    private void jSaveImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveImgActionPerformed
        JFileChooser jfc = new JFileChooser(".");
        if (JFileChooser.APPROVE_OPTION == jfc.showSaveDialog(null)) { //Taking in the file wanted to be saved
                File f = jfc.getSelectedFile();
                f = new File(f.getPath() + ".png");
                //Prepares a fresh image to be save
                BufferedImage screen = new BufferedImage(jCenterPanel.getWidth(),jCenterPanel.getHeight(),1);
                Graphics g = screen.getGraphics();
                showVect(g);
                try{
                    ImageIO.write(screen,"png",f);
                
                }
                catch(FileNotFoundException ex){}
                catch(IOException ex){}
               
        }
    }//GEN-LAST:event_jSaveImgActionPerformed

    private void jOpenButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenButtActionPerformed
        loadMeth(); //Calls the load method
    }//GEN-LAST:event_jOpenButtActionPerformed

    private void jPrintButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrintButtActionPerformed
        printStuff(); //Calls the print method
    }//GEN-LAST:event_jPrintButtActionPerformed

    private void jSaveButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveButtActionPerformed
        saveObj(); //Calls method to save object
    }//GEN-LAST:event_jSaveButtActionPerformed

    private void jTextButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextButtActionPerformed
        String text = JOptionPane.showInputDialog(null,"Text: ");  //Gets user text
        s = new Text();  //Sets up new text
        s.text = text;  //Sends in new text
    }//GEN-LAST:event_jTextButtActionPerformed

    private void jBoldSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jBoldSlideStateChanged
        s.howBold = jBoldSlide.getValue();  //Stores the value of the bold slider
    }//GEN-LAST:event_jBoldSlideStateChanged

    private void jColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jColorPanelMouseClicked
        jColorPanel.setBackground(JColorChooser.showDialog(this, "Color Selector", null));  //Sets background color chosen by user
        s.shapeColor = jColorPanel.getBackground(); //Sets color of shape based on color of background
    }//GEN-LAST:event_jColorPanelMouseClicked

    private void jUndoButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUndoButtActionPerformed
        undoMeth(); //Calls method to undo last shape
    }//GEN-LAST:event_jUndoButtActionPerformed

    private void jFreeButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFreeButtActionPerformed
        s = new FreeHand();
    }//GEN-LAST:event_jFreeButtActionPerformed

    private void jBoldButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBoldButtActionPerformed
        jBoldFrame.show();   //Makes the bold frame appear when the bold button is clicked
        jBoldFrame.setSize(300, 75);  //Sets the size to be perfect display
    }//GEN-LAST:event_jBoldButtActionPerformed

    private void jTransButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransButtActionPerformed
        jTransFrame.show();   //Makes the transparency fram appear when the transparency button is clicked
        jTransFrame.setSize(350, 75);  //Sets the size to be perfect display
    }//GEN-LAST:event_jTransButtActionPerformed

    private void jTransSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTransSlideStateChanged
        s.alpha = jTransSlide.getValue();
    }//GEN-LAST:event_jTransSlideStateChanged

    private void jGradColor1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGradColor1MouseClicked
        jGradColor1.setBackground(JColorChooser.showDialog(this, "Color Selector", null));  //Sets background color chosen by user
    }//GEN-LAST:event_jGradColor1MouseClicked

    private void jGradColor2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGradColor2MouseClicked
        jGradColor2.setBackground(JColorChooser.showDialog(this, "Color Selector", null));  //Sets background color chosen by user
    }//GEN-LAST:event_jGradColor2MouseClicked

    private void jDrawGradButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDrawGradButtActionPerformed
        
        if(jOvalRadio.isSelected()) s = new Oval();
        if(jRectRadio.isSelected()) s = new Rectangle();
        if(jRoundRadio.isSelected()) s = new RoundRect();
        /* Wasn't able to get working, but isn't really necessary.
        if(jFSRadio.isSelected())
        {
            s = new Rectangle();
            s.oldx = 0;
            s.oldy = 0;
            s.newx = jCenterPanel.getWidth();
            s.newy = jCenterPanel.getHeight();
            s.grad = true;   //Telling it to draw gradient
            jFillCheck.setSelected(true);  //Telling it to draw the filled shaped
            s.gradColor1 = jGradColor1.getBackground();
            s.gradColor2 = jGradColor2.getBackground();
            Graphics g = jCenterPanel.getGraphics();
            s.drawShape(g);
            storage.add(s);
            s = new Line();
        }
        * */
        
        
        s.grad = true;   //Telling it to draw gradient
        jFillCheck.setSelected(true);  //Telling it to draw the filled shaped
        s.gradColor1 = jGradColor1.getBackground();
        s.gradColor2 = jGradColor2.getBackground();
        jGradFrame.hide();   //Makes the gradient frame disappear when the gradient button is clicked
    }//GEN-LAST:event_jDrawGradButtActionPerformed

    private void jGradButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGradButtActionPerformed
        jGradFrame.show();   //Makes the gradient frame appear when the gradient button is clicked
        jGradFrame.setSize(275, 275);  //Sets the size to be perfect display
        
        //Creating a button group for the radio buttons
        ButtonGroup bg = new ButtonGroup();
        bg.add(jOvalRadio);
        bg.add(jRectRadio);
        bg.add(jFSRadio);
        bg.add(jRoundRadio);
        jFSRadio.setSelected(true);  //Default choice
        
    }//GEN-LAST:event_jGradButtActionPerformed

    private void jTextureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextureActionPerformed
         s = new Texture();
    }//GEN-LAST:event_jTextureActionPerformed

//Personal Methods Below    
    
/*Method to undo last shape drawn*/
public void undoMeth()
{
    
    if(storage.size() != 0)   //Makes sure there is Shapes that have been drawn
        {
            int lastElement = storage.size() - 1;  //Finding the shape to be removed
            storage.remove(lastElement);  //Removing the shape
            repaint();
            //Sets up the double buffer
            bg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
            Graphics bgg = bg.getGraphics();
            bgg.setColor(Color.white);
            bgg.fillRect(0, 0, jCenterPanel.getWidth(),jCenterPanel.getHeight());
            fg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
            showVect(bgg);
            
        }
    
}
    
/*Methods just draws the vector, plain and simple*/
public void showVect(Graphics g)
{ 
    for (int i = 0; i < storage.size(); i++)
    {
            Shape currShape = storage.elementAt(i);
            currShape.drawShape(g);
    }
}

/*Method to save the vector as an object and output the file*/
public void saveObj()
{
    
        JFileChooser jfc = new JFileChooser(".");
        if (JFileChooser.APPROVE_OPTION == jfc.showSaveDialog(null)) { //Taking in the file wanted to be saved
                File f = jfc.getSelectedFile();
                f = new File(f.getPath()+".obj");
                try{
                    FileOutputStream fos = new FileOutputStream(f);
                    ObjectOutputStream oos = new ObjectOutputStream(fos);
                    oos.writeObject(storage);  //Stores in vector form
                    oos.close();  //No memory leaks
                    fos.close();  //No memory leaks
                
                }
                catch(FileNotFoundException ex){}
                catch(IOException ex){}
               
        }
    
}

/*Method to load a file based on png/obj format*/
public void loadMeth()
{

        storage.clear();  //Clears the screen
        bg = null;
        fg = null;
        pre = null;  //Gets rid of the image that might have been loaded before
        repaint();
        JFileChooser jfc = new JFileChooser(".");
        if (JFileChooser.APPROVE_OPTION == jfc.showOpenDialog(null)) {  //Taking in the file wanted to be opened
      
            File f = jfc.getSelectedFile();
            String path = f.getPath();
            
            if(path.contains(".obj"))  //If object, loads vector into image
                { 
                FileInputStream fis;
                try {
                    fis = new FileInputStream(f);
                    ObjectInputStream ois = new ObjectInputStream(fis);
                    storage = (Vector<Shape>)ois.readObject();  //Pumps into GUI storage vector
                }   catch (FileNotFoundException ex) {}
                    catch (IOException ex){}
                    catch (ClassNotFoundException ex){}
                
                //Sets up the double buffer
                bg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
                Graphics bgg = bg.getGraphics();
                bgg.setColor(Color.white);
                bgg.fillRect(0, 0, jCenterPanel.getWidth(),jCenterPanel.getHeight());
                fg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
                
                showVect(bgg);
            
            }
            else   //If any type of image file, loads into pre image
            {
                //Prepares a fresh image
                BufferedImage screen = new BufferedImage(jCenterPanel.getWidth(),jCenterPanel.getHeight(),2);
                Graphics g = jCenterPanel.getGraphics();
                try{
                    screen = ImageIO.read(f); 
                    pre = screen;  //Sets up an image to be constantly repainted to screen
                } 
                catch(FileNotFoundException ex){}
                catch(IOException ex){}
                g.drawImage(screen, 0, 0, null);
                
                //Prepares doulbe buffer
                bg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
                Graphics bgg = bg.getGraphics();
                bgg.setColor(Color.white);
                bgg.fillRect(0, 0, jCenterPanel.getWidth(),jCenterPanel.getHeight());
                fg = jCenterPanel.createImage(jCenterPanel.getWidth(),jCenterPanel.getHeight());
               
                bgg.drawImage(screen, 0, 0, null);
            }
        }
        
        
        repaint();
    
}

public void printStuff()
{
        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.pageDialog(new PageFormat());
        
        //Prepares a fresh image to be printed
        Image screen = jCenterPanel.createImage(jCenterPanel.getHeight(),jCenterPanel.getWidth());
        Graphics g = screen.getGraphics();
        showVect(g);
        
        if(pj.printDialog())
        {
            Book b = new Book();
            Printable printable = new MyPrintable(screen);
            b.append(printable, pf);
            pj.setPageable(b);
            try{
                pj.print();
            }
            catch(PrinterException ex){}
        }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrawGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrawGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrawGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrawGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new DrawGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jAbout;
    private javax.swing.JFrame jAboutFrame;
    private javax.swing.JButton jBoldButt;
    private javax.swing.JFrame jBoldFrame;
    private javax.swing.JSlider jBoldSlide;
    private javax.swing.JPanel jBotPanel;
    private javax.swing.JPanel jCenterPanel;
    private javax.swing.JButton jClearButt;
    private javax.swing.JMenuItem jClose;
    private javax.swing.JPanel jColorPanel;
    private javax.swing.JCheckBox jDotCheck;
    private javax.swing.JButton jDrawGradButt;
    private javax.swing.JRadioButton jFSRadio;
    private javax.swing.JCheckBox jFillCheck;
    private javax.swing.JButton jFreeButt;
    private javax.swing.JButton jGradButt;
    private javax.swing.JPanel jGradColor1;
    private javax.swing.JPanel jGradColor2;
    private javax.swing.JFrame jGradFrame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jLoad;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton jOpenButt;
    private javax.swing.JRadioButton jOvalRadio;
    private javax.swing.JMenuItem jPrint;
    private javax.swing.JButton jPrintButt;
    private javax.swing.JRadioButton jRectRadio;
    private javax.swing.JRadioButton jRoundRadio;
    private javax.swing.JMenuItem jSave;
    private javax.swing.JButton jSaveButt;
    private javax.swing.JMenuItem jSaveImg;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JButton jTextButt;
    private javax.swing.JButton jTexture;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jTransButt;
    private javax.swing.JFrame jTransFrame;
    private javax.swing.JSlider jTransSlide;
    private javax.swing.JMenuItem jUndo;
    private javax.swing.JButton jUndoButt;
    private OvalButton ovalButton1;
    private RectButton rectButton1;
    private RoundRectButton roundRectButton1;
    // End of variables declaration//GEN-END:variables
}
